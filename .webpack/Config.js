/*
*  DO NOT EDIT THIS FILE, IF YOU NEED TO MAKE CHANGES TO THE CONFIG USE THE PROVIDED METHODS AND EDIT YOUR webpack.config.js IN THE ROOT OF THE PROJECT
*  Thanks :)
* */

"use strict";

const webpack = require("webpack");
const path = require("path");

class Config {
    constructor() {
        this.mHost = "0.0.0.0";
        this.mEntry = {
            app: path.join(process.cwd(), "src/app.ts")
        };
        this.mDist = "public";
    }

    dist(dist) {
        this.mDist = dist;
        return this;
    }

    getOutput() {
        return {
            path: path.join(process.cwd(), this.mDist),
            filename: "[name].js"
        };
    }

    getDevServer() {
        return {
            host: this.mHost,
            contentBase: path.join(process.cwd(), this.mDist),
            hot: true,
            compress: true,
            inline: true,
            stats: {
                colors: true
            },
            watchOptions: {
                ignored: /node_modules/
            }
        };
    }

    getRules() {
        return [
            {
                test: /\.tsx?$/,
                use: "ts-loader",
                exclude: /node_modules/
            }
        ];
    }

    getModules() {
        return {
            rules: this.getRules()
        };
    }

    getPlugins() {
        return [
            new webpack.NamedModulesPlugin(),
            new webpack.IgnorePlugin(/^\.\/locale$/, /moment$/)
        ];
    }

    getResolvers() {
        return {
            extensions: [".tsx", ".ts", ".js"]
        };
    }

    build() {
        return {
            entry: this.mEntry,
            devServer: this.getDevServer(),
            mode: "development",
            output: this.getOutput(),
            resolve: this.getResolvers(),
            module: this.getModules(),
            plugins: this.getPlugins()
        };
    }
}

module.exports = Config;
